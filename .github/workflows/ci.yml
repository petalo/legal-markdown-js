name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  statuses: write
  checks: write

jobs:
  test:
    name: CI / Test (Node ${{ matrix.node-version }}) (pull_request)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Chrome for PDF generation
        run: |
          echo "Installing Chrome for Puppeteer..."
          mkdir -p ~/.cache/puppeteer-global
          # Install with timeout and retry
          timeout 300 bash -c 'PUPPETEER_CACHE_DIR=~/.cache/puppeteer-global npx puppeteer browsers install chrome' || \
          timeout 300 bash -c 'PUPPETEER_CACHE_DIR=~/.cache/puppeteer-global npx puppeteer browsers install chrome'
          echo "Checking Chrome installation..."
          ls -la ~/.cache/puppeteer-global/ || echo "Global cache directory not found"
          find ~/.cache -name "*chrome*" -type d | head -5 || echo "No chrome directories found"

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test:coverage
        env:
          # Increase timeouts for CI environment
          VITEST_TEST_TIMEOUT: 45000
          # Ensure Chrome is available
          PUPPETEER_CACHE_DIR: ~/.cache/puppeteer-global

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  security:
    name: CI / Security Audit (pull_request)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit --audit-level high

      - name: Check for vulnerabilities
        run: npx audit-ci --config audit-ci.json || echo "Security check completed with warnings"
